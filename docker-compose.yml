version: '3.8'

services:
  # Development service
  etherscan-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3010:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_DEFAULT_CHAIN=ethereum
      - NEXT_PUBLIC_RETH_RPC_URL=http://35.185.40.237:8545
      - NEXT_PUBLIC_RETH_WS_URL=ws://35.185.40.237:8546
    env_file:
      - .env.local
    command: npm run dev
    profiles:
      - dev

  # Production service
  etherscan-prod:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    ports:
      - "3010:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_DEFAULT_CHAIN=ethereum
      - NEXT_PUBLIC_RETH_RPC_URL=http://35.185.40.237:8545
      - NEXT_PUBLIC_RETH_WS_URL=ws://35.185.40.237:8546
    env_file:
      - .env.production
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    profiles:
      - prod

  # Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - etherscan-prod
    restart: unless-stopped
    profiles:
      - prod

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    profiles:
      - prod

volumes:
  redis_data:

networks:
  default:
    name: etherscan-network
